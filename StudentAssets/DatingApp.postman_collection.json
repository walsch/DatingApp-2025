{
	"info": {
		"_postman_id": "7b66a031-527e-43a5-a200-8dc48b9eb355",
		"name": "DatingApp Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2726016",
		"_collection_link": "https://restless-satellite-764890.postman.co/workspace/DatingApp---Net8~c77379e2-ce60-4dc7-996f-9403ea65624e/collection/2726016-7b66a031-527e-43a5-a200-8dc48b9eb355?action=share&source=collection_link&creator=2726016"
	},
	"item": [
		{
			"name": "Section 2",
			"item": [
				{
					"name": "Get WeatherForecast",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/weatherforecast",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"weatherforecast"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Members",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Member",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/members/bob-id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"bob-id"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 4",
			"item": [
				{
					"name": "Register user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"dave@test.com\",\n    \"displayName\": \"Dave\",\n\t\"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user query string",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register?email=sam@test.com&password=password&displayName=Sam",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							],
							"query": [
								{
									"key": "email",
									"value": "sam@test.com"
								},
								{
									"key": "password",
									"value": "password"
								},
								{
									"key": "displayName",
									"value": "Sam"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user blank fields",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"\",\n    \"displayName\": \"\",\n\t\"password\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as bob",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Members",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Member",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/members/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User With Bearer token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJvYkB0ZXN0LmNvbSIsIm5hbWVpZCI6Ijc4ODE4MmYyLWJhMDAtNDAwYi1iOGM4LWUwZTZjY2VlYzlmOCIsIm5iZiI6MTc0NzMwNDQ5NywiZXhwIjoxNzQ3OTA5Mjk3LCJpYXQiOjE3NDczMDQ0OTd9.AiWFdI4cogoz_nRk5ZPa7YalK7X7Zw2rykiWDcaohQ9G9dB4hT-uVkEv_L8aTLIjDpzoQYeDAJMOdQQC_paurQ"
							}
						],
						"url": {
							"raw": "{{url}}/api/members/788182f2-ba00-400b-b8c8-e0e6cceec9f8",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"788182f2-ba00-400b-b8c8-e0e6cceec9f8"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 7",
			"item": [
				{
					"name": "Get Null Ref Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/server-error",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"server-error"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Auth Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Not Found error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/not-found",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"not-found"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bad Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/bad-request",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"bad-request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Validation Error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 8",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"lisa@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Members",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Member by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members/lisa-id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"lisa-id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Photos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/members/lisa-id/photos",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"lisa-id",
								"photos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 10",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"lisa@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"knownAs\": \"Lisa 2\",\n\t\"description\": \"Updated intro again again\",\n\t\"city\": \"Updated city\",\n\t\"country\": \"Updated country\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 11",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"lisa@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add photo for user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "File",
									"type": "file",
									"src": "/Users/neil/Library/CloudStorage/SynologyDrive-Projects/work/DatingAppCourse/ApiPhotos/wonder3.jpg"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/members/add-photo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"add-photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Member by userId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members/lisa-id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"lisa-id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Member photos by userId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members/lisa-id/photos",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"lisa-id",
								"photos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Main Photo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members/set-main-photo/11",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"set-main-photo",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Photo",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members/delete-photo/11",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"delete-photo",
								"11"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 12",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"gender\": \"male\",\n    \"email\": \"bob@test.com\",\n    \"displayName\": \"Bob\",\n    \"dateOfBirth\": \"1985-01-23\",\n    \"city\": \"London\",\n    \"country\": \"UK\",\n    \"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by userId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/users/lisa-id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"lisa-id"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 13",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"lisa@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Members No QS",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Members with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members?pageNumber=1&pageSize=5",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users with gender",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members?gender=male",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							],
							"query": [
								{
									"key": "gender",
									"value": "male"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users with minAge 25",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members?minAge=25",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							],
							"query": [
								{
									"key": "minAge",
									"value": "25"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users with maxAge 40",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members?maxAge=40",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							],
							"query": [
								{
									"key": "maxAge",
									"value": "40"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users in 20s",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members?minAge=20&maxAge=29",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							],
							"query": [
								{
									"key": "minAge",
									"value": "20"
								},
								{
									"key": "maxAge",
									"value": "29"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users orderedby Created",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members?orderBy=created",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							],
							"query": [
								{
									"key": "orderBy",
									"value": "created"
								},
								{
									"key": "gender",
									"value": "female",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users orderedby lastActive",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members?orderBy=lastActive",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							],
							"query": [
								{
									"key": "orderBy",
									"value": "lastActive"
								},
								{
									"key": "gender",
									"value": "female",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 14",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"lisa@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add like for todd from lola",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/likes/todd-id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"likes",
								"todd-id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as todd and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('todd_token', user.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"todd@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add like for lisa from todd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{todd_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/likes/lisa-id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"likes",
								"lisa-id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Liked Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/likes?predicate=liked",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"likes"
							],
							"query": [
								{
									"key": "predicate",
									"value": "liked"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Liked Users Liked by",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/likes?predicate=likedBy",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"likes"
							],
							"query": [
								{
									"key": "predicate",
									"value": "likedBy"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Liked Users Mutual",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/likes?predicate=mutual",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"likes"
							],
							"query": [
								{
									"key": "predicate",
									"value": "mutual"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Liked Ids for lisa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/likes/list",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"likes",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 15",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('accessToken');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.accessToken);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"lisa@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Message From Lisa to Todd",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipientId\": \"todd-id\",\n    \"content\": \"Test message 1 from Lisa to Todd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/messages",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Todd and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('username');",
									"    pm.expect(user).to.have.property('todd_token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('todd_token', user.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"todd@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Message From Todd to Lisa",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{todd_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipientId\": \"lisa-id\",\n    \"content\": \"Test message from Todd to Lisa\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/messages",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Default Messages for Lisa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/messages",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Default Messages for Todd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{todd_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/messages",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Outbox Messages for Lisa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/messages?container=Outbox",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							],
							"query": [
								{
									"key": "container",
									"value": "Outbox"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Outbox Messages for Todd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{todd_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/messages?container=Outbox",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages"
							],
							"query": [
								{
									"key": "container",
									"value": "Outbox"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Message thread Lisa and Todd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/messages/thread/todd-id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"messages",
								"thread",
								"todd-id"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 16",
			"item": [
				{
					"name": "Login as lisa and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('accessToken');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('token', user.accessToken);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"lisa@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get members with bearer token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as lisa with cookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has Set-Cookie header\", function () {",
									"    const cookies = pm.response.headers.get('Set-Cookie');",
									"    pm.expect(cookies).to.include('.AspNetCore.Identity.Application=');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"lisa@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login?useCookies=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							],
							"query": [
								{
									"key": "useCookies",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get members with cookie",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout (remove cookie)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has Set-Cookie header\", function () {",
									"    const cookies = pm.response.headers.get('Set-Cookie');",
									"    pm.expect(cookies).to.include('.AspNetCore.Identity.Application=');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User Bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"gender\": \"male\",\n    \"email\": \"bob@test.com\",\n    \"displayName\": \"Bob\",\n    \"dateOfBirth\": \"1985-01-23\",\n    \"city\": \"London\",\n    \"country\": \"UK\",\n    \"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/api/account/register",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as bob with cookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has Set-Cookie header\", function () {",
									"    const cookies = pm.response.headers.get('Set-Cookie');",
									"    pm.expect(cookies).to.include('.AspNetCore.Identity.Application=');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login?useCookies=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							],
							"query": [
								{
									"key": "useCookies",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current user info",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/account/user-info",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"user-info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as admin with cookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login?useCookies=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							],
							"query": [
								{
									"key": "useCookies",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Admin secret",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/admin-secret",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"admin-secret"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Roles as admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/admin/users-with-roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"users-with-roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Photos to moderate",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/admin/photos-to-moderate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"photos-to-moderate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Roles for Lisa",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/api/admin/edit-roles/lisa-id?roles=Moderator,Member",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"edit-roles",
								"lisa-id"
							],
							"query": [
								{
									"key": "roles",
									"value": "Moderator,Member"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 18",
			"item": [
				{
					"name": "Login as lisa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has Set-Cookie header\", function () {",
									"    const cookies = pm.response.headers.get('Set-Cookie');",
									"    pm.expect(cookies).to.include('.AspNetCore.Identity.Application=');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"lisa@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login?useCookies=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							],
							"query": [
								{
									"key": "useCookies",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as todd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has Set-Cookie header\", function () {",
									"    const cookies = pm.response.headers.get('Set-Cookie');",
									"    pm.expect(cookies).to.include('.AspNetCore.Identity.Application=');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"todd@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login?useCookies=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							],
							"query": [
								{
									"key": "useCookies",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has Set-Cookie header\", function () {",
									"    const cookies = pm.response.headers.get('Set-Cookie');",
									"    pm.expect(cookies).to.include('.AspNetCore.Identity.Application=');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login?useCookies=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							],
							"query": [
								{
									"key": "useCookies",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add photo for user (add 2 photos here)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "File",
									"type": "file",
									"src": "/Users/neil/Projects/ReventsCourse/ApiPhotos/wonder2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/members/add-photo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"add-photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Photos to moderate (login as admin)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/admin/photos-to-moderate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"photos-to-moderate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get lisa photos (should see the unapproved photos when logged in as lisa)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/members/lisa-id/photos",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"lisa-id",
								"photos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve photo (need to add the id of added photo)",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/api/admin/approve-photo/11",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"approve-photo",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reject photo (need to add the id of added photo)",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/api/admin/reject-photo/12",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"reject-photo",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User Bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"gender\": \"male\",\n    \"email\": \"bob@test.com\",\n    \"displayName\": \"Bob\",\n    \"dateOfBirth\": \"1985-01-23\",\n    \"city\": \"London\",\n    \"country\": \"UK\",\n    \"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Bob",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has Set-Cookie header\", function () {",
									"    const cookies = pm.response.headers.get('Set-Cookie');",
									"    pm.expect(cookies).to.include('.AspNetCore.Identity.Application=');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login?useCookies=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							],
							"query": [
								{
									"key": "useCookies",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add photo for bob (add 2 photos) - should both be in unapproved state",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "File",
									"type": "file",
									"src": "/Users/neil/Projects/ReventsCourse/ApiPhotos/bat2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/members/add-photo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"add-photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve photo for bob  (need to add the id of unapproved photo) - ensure it gets set as the main photo",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/api/admin/approve-photo/13",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"admin",
								"approve-photo",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by username as bob - should see approved photo set to main",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bob_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/members/c8cffdd2-7e99-45ab-af07-ae80d8b9b562",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"members",
								"c8cffdd2-7e99-45ab-af07-ae80d8b9b562"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://localhost:5001"
		},
		{
			"key": "cloudName",
			"value": "dj3wmuy3l",
			"type": "string"
		},
		{
			"key": "signature",
			"value": ""
		}
	]
}